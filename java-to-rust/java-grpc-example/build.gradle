/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    ext {
        // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-bom
        protobufVersion = '3.17.3'
        protobufPluginVersion = '0.8.17'
        // https://mvnrepository.com/artifact/io.grpc/grpc-bom
        grpcVersion = '1.41.0'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id "com.google.protobuf" version "${protobufPluginVersion}"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    implementation platform("com.google.protobuf:protobuf-bom:${protobufVersion}")
    implementation platform("io.grpc:grpc-bom:${grpcVersion}")

    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api:2.0.2'

    implementation 'net.devh:grpc-client-spring-boot-starter:2.12.0.RELEASE'
    implementation "io.grpc:grpc-netty-shaded"
    // https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-stub"
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    implementation "com.google.protobuf:protobuf-java-util"
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-registry-jmx'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.12.4'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    runtimeOnly 'io.micrometer:micrometer-registry-cloudwatch'
    testImplementation "io.grpc:grpc-testing"
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
}

group = 'com.github.poad.example'
version = '1.0.0-SNAPSHOT'
description = 'java-grpc-example'
java.sourceCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


sourceSets {
    main {
        proto {
            srcDir "$rootDir/../proto"
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generatedFilesBaseDir = "$projectDir/src"
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {  }
            }
        }
    }
}

bootBuildImage {
    imageName = "poad/java-grpc-example"
}
