/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    ext {
        // https://mvnrepository.com/artifact/net.devh/grpc-server-spring-boot-starter
        grpcSpringBootVersion = '3.1.0.RELEASE'
        springBootVersion = '3.3.3'
        springDependencyManagementVersion = '1.1.6'
        // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-bom
        protobufVersion = '4.28.1'
        // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-gradle-plugin
        protobufPluginVersion = '0.9.4'
        // https://mvnrepository.com/artifact/io.grpc/grpc-bom
        grpcVersion = '1.66.0'
        // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
        jakartaValidationApiVersion = '3.0.1'
        // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-annotations-api
        tomcatAnnotationsApi = '10.1.28'
        // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
        tomcatJdbcVersion = '10.1.28'
        // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
        mysqlConnectorVersion = '9.0.0'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-joda
        jacksonDatatypeJodaVersion = '2.17.2'
        // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
        // jaxbApiVersion = '2.3.1'
        // https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
        jaxbApiVersion = '4.0.2'
        mockitoVersion = '4.+'
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-bom
        log4j2Version = '2.24.0'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id "com.google.protobuf" version "${protobufPluginVersion}"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

configurations {
    all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
    }
}

dependencies {
    implementation platform("org.apache.logging.log4j:log4j-bom:${log4j2Version}")
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-to-slf4j
    runtimeOnly "org.apache.logging.log4j:log4j-to-slf4j:${log4j2Version}"

    implementation platform("com.google.protobuf:protobuf-bom:${protobufVersion}")
    implementation platform("io.grpc:grpc-bom:${grpcVersion}")

    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }
    implementation "org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}"
    implementation "com.mysql:mysql-connector-j:${mysqlConnectorVersion}"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:${jaxbApiVersion}"
    implementation "net.devh:grpc-server-spring-boot-starter:${grpcSpringBootVersion}"
    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation "io.grpc:grpc-netty-shaded"
    // https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-stub"
    compileOnly "org.apache.tomcat:tomcat-annotations-api:${tomcatAnnotationsApi}" // necessary for Java 9+

    implementation "com.google.protobuf:protobuf-java-util"
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-registry-jmx'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonDatatypeJodaVersion}"
    // implementation "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:${jaxbApiVersion}"
    testImplementation "io.grpc:grpc-testing"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group = 'com.github.poad.example'
version = '0.1'
description = 'java-micronaut-grpc-server'
java.sourceCompatibility = JavaVersion.VERSION_17

sourceSets {
    main {
        proto {
            srcDir "$rootDir/../proto"
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {  }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootBuildImage {
    imageName = "poad/java-micronaut-grpc-server"
}
